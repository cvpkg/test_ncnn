name: test

on:
  push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [
          macOS-latest,
          ubuntu-latest,
          windows-latest
        ]
      fail-fast: false

    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Install ncnn
        uses: cvpkg/ncnn-installer@v0.1

      - name: install gcc-10 on macOs
        if: matrix.os == 'macOs-latest'
        run: brew install gcc@10
        
      - name: configure test ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-Werror" . -B build

      - name: configure test macOs
        if: matrix.os == 'macOs-latest'
        run: cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-Werror" . -B build
        env:
          CC: /usr/local/bin/gcc-10
          CXX: /usr/local/bin/g++-10

      - name: build test not windows
        if: matrix.os != 'windows-latest'
        run: cmake --build .
        working-directory: build

      - name: configure windows
        run: cmake . -B build
        if: matrix.os == 'windows-latest'

      - name: build windows
        if: matrix.os == 'windows-latest'
        run: cmake --build . --config Release
        working-directory: build

      - name: run test not windows
        if: matrix.os != 'windows-latest'
        run: ./testbed
        working-directory: build

      - name: run test windows
        if: matrix.os == 'windows-latest'
        run: testbed.exe
        working-directory: build
        shell: cmd
